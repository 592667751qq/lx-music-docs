import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as l,c as i,a as e,b as t,d as o,e as a}from"./app-64ec91fb.js";const s={},u=e("br",null,null,-1),n={href:"https://github.com/lyswhut/lx-music-script#readme",target:"_blank",rel:"noopener noreferrer"},h={href:"https://greasyfork.org/zh-CN/scripts/438148",target:"_blank",rel:"noopener noreferrer"},g=a('<p>以下是目前可用的Scheme URL调用方式：</p><ul><li>URL统一以<code>lxmusic://</code>开头</li><li>若无特别说明，源的可用值为：<code>kw/kg/tx/wy/mg</code></li><li>若无特别说明，音质的可用值为：<code>128k/320k/flac/flac24bit</code></li></ul><p>目前支持两种传参方式：</p><ul><li>通过<code>data</code>传参，以经过URL编码的JSON数据传参，例：<code>lxmusic://music/play?data=xxxx</code>，<br> 其中<code>xxxx</code>为经过URL编码后的JSON数据，支持复杂的参数调用</li><li>通过<code>URL</code>传参，适用于简单传参的调用，不需要转成JSON格式，例：<br><code>lxmusic://music/search/xxxx</code>，但仍然需要对数据进行URL编码，只适应于简单参数调用（v1.18.0新增）</li></ul><h3 id="data方式传参" tabindex="-1"><a class="header-anchor" href="#data方式传参" aria-hidden="true">#</a> <code>data</code>方式传参</h3><p>以经过URL编码的JSON数据传参，例：<code>lxmusic://music/play?data=xxxx</code>，<br> 其中<code>xxxx</code>为经过URL编码后的JSON数据，JSON数据内容取决于下表的参数部分</p><table><thead><tr><th>描述</th><th>URL</th><th>参数</th></tr></thead><tbody><tr><td>打开歌单</td><td><code>songlist/open</code></td><td><code>source&lt;String&gt;</code>（源，必须）<br><code>id&lt;String/Number&gt;</code>（歌单ID，可选）<br><code>url&lt;String&gt;</code>（歌单URL，可选）其中ID与URL必需传一个</td></tr><tr><td>播放歌单</td><td><code>songlist/play</code></td><td><code>source&lt;String&gt;</code>（源，必须）<br><code>id&lt;String/Number&gt;</code>（歌单ID，可选）<br><code>url&lt;String&gt;</code>（歌单URL，可选）其中<code>id</code>与<code>url</code>必需传一个<br><code>index&lt;Number&gt;</code>（播放第几首歌，可选，从0开始）</td></tr><tr><td>搜索歌曲</td><td><code>music/search</code></td><td><code>keywords&lt;String/Number&gt;</code>（要搜索的内容，必须）<br><code>source&lt;String&gt;</code>（源，可选）</td></tr><tr><td>播放歌曲</td><td><code>music/play</code></td><td><code>name&lt;String&gt;</code>（歌曲名，必传）<br><code>singer&lt;String&gt;</code>（艺术家名，必传）<br><code>source&lt;String&gt;</code>（源，必传）<br><code>songmid&lt;String/Number&gt;</code>（歌曲ID，必传）<br><code>img&lt;String&gt;</code>（歌曲图片链接，选传）<br><code>albumId&lt;String/Number&gt;</code>（歌曲专辑ID，选传）<br><code>interval&lt;String&gt;</code>（格式化后的歌曲时长，选传，例：<code>03:55</code>）<br><code>albumName&lt;String&gt;</code>（歌曲专辑名称，选传）<br><code>types&lt;Object&gt;</code>（歌曲可用音质数组，必传，<br>数组格式：<code>[{&quot;type&quot;: &quot;&lt;音质&gt;&quot;, size: &quot;&lt;格式化后的文件大小，选传&gt;&quot;, hash: &quot;&lt;kg源必传&gt;&quot;}]</code>，<br>例：<code>[{&quot;type&quot;: &quot;128k&quot;, size: &quot;3.56M&quot;}, {&quot;type&quot;: &quot;320k&quot;, size: null}]</code>）<br><br>以下为平台特定参数：<br><code>hash&lt;String&gt;</code>（歌曲hash，kg源必传）<br><code>strMediaMid&lt;String&gt;</code>（歌曲strMediaMid，tx源必传）<br><code>albumMid&lt;String&gt;</code>（歌曲albumMid，tx源专用，选传）<br><code>copyrightId&lt;String&gt;</code>（歌曲copyrightId，mg源必传）<br><code>lrcUrl&lt;String&gt;</code>、<code>trcUrl&lt;String&gt;</code>、<code>mrcUrl&lt;String&gt;</code>（歌曲lrcUrl、trcUrl与mrcUrl，mg源专用，选传）</td></tr></tbody></table><h4 id="以data传参的例子" tabindex="-1"><a class="header-anchor" href="#以data传参的例子" aria-hidden="true">#</a> 以data传参的例子</h4><p>以经过URL编码的JSON数据传参，例：<code>lxmusic://music/play?data=xxxx</code>，其中xxxx为经过URL编码后的JSON数据</p><ul><li>打开歌单：<code>lxmusic://songlist/open?data=%7B%22source%22:%22kw%22,%22id%22:%223373919903%22%7D</code></li><li>搜索歌曲：<code>lxmusic://music/search?data=%7B%22keywords%22:%22%E7%AA%81%E7%84%B6%E7%9A%84%E8%87%AA%E6%88%91%22%7D</code></li></ul><h3 id="url方式传参" tabindex="-1"><a class="header-anchor" href="#url方式传参" aria-hidden="true">#</a> <code>URL</code>方式传参</h3><p>由于URL传参只适用于简单传参场景，所以目前只支持以下功能的调用：</p><table><thead><tr><th>描述</th><th>URL</th><th>参数</th></tr></thead><tbody><tr><td>搜索歌曲</td><td><code>music/search/{source}/{keywords}</code></td><td><code>source</code>（源，可选）<br><code>keywords</code>（要搜索的内容，必须）<br>例：<code>music/search/kw/xxx</code>、<code>music/search/xxx</code></td></tr><tr><td>打开歌单</td><td><code>songlist/open/{source}/{id/url}</code></td><td><code>source</code>（源，必须）<br><code>id/url</code>（歌单ID或歌单URL，必须）<br>例：<code>songlist/open/kw/123456</code></td></tr><tr><td>播放歌曲</td><td><code>player/play</code></td><td></td></tr><tr><td>暂停播放</td><td><code>player/pause</code></td><td></td></tr><tr><td>切换下一曲</td><td><code>player/skipNext</code></td><td></td></tr><tr><td>切换上一曲</td><td><code>player/skipPrev</code></td><td></td></tr><tr><td>切换播放或暂停</td><td><code>player/togglePlay</code></td><td></td></tr><tr><td>收藏当前播放的歌曲</td><td><code>player/collect</code></td><td></td></tr><tr><td>取消收藏当前播放的歌曲</td><td><code>player/uncollect</code></td><td></td></tr><tr><td>不喜欢当前播放的歌曲</td><td><code>player/dislike</code></td><td></td></tr></tbody></table><h4 id="以url传参的例子" tabindex="-1"><a class="header-anchor" href="#以url传参的例子" aria-hidden="true">#</a> 以URL传参的例子</h4><p>用<code>lxmusic://</code>拼接上表中填充参数后的URL即可，填充参数时最好将参数单独转一下URL编码，<br> 否则若参数中存在特殊字符（如<code>/</code>）将导致异常的调用</p><ul><li>打开歌单：<code>lxmusic://songlist/open/kw/3373919903</code></li><li>搜索歌曲：<code>lxmusic://music/search/%E7%AA%81%E7%84%B6%E7%9A%84%E8%87%AA%E6%88%91</code></li><li>切换下一曲：<code>lxmusic://player/skipNext</code></li></ul>',16),p={href:"https://github.com/lyswhut/lx-music-desktop/issues/1056",target:"_blank",rel:"noopener noreferrer"};function x(b,m){const d=r("ExternalLinkIcon");return l(),i("div",null,[e("p",null,[t("从v1.17.0起支持 Scheme URL，可以使用此功能从浏览器等场景下调用LX Music，我们开发了一个"),u,e("a",n,[t("油猴脚本"),o(d)]),t("配套使用")]),e("p",null,[t("脚本安装地址："),e("a",h,[t("https://greasyfork.org/zh-CN/scripts/438148"),o(d)])]),g,e("p",null,[t("相关issue看："),e("a",p,[t("https://github.com/lyswhut/lx-music-desktop/issues/1056"),o(d)])])])}const k=c(s,[["render",x],["__file","scheme-url.html.vue"]]);export{k as default};
